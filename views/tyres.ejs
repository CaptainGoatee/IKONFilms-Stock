<!-- @format -->

<!DOCTYPE html>
<html lang="en">
  <link href="/css/tailwind.css" rel="stylesheet" />

  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tyre Stock</title>
    <link rel="icon" href="/images/favicon.webp" type="image/x-icon" />
    <link href="/css/styles.css" rel="stylesheet" />
    <link href="/css/index.css" rel="stylesheet" />
    <script
      src="https://kit.fontawesome.com/e96370e984.js"
      crossorigin="anonymous"
    ></script>
  </head>
  <body class="page text-white">
    <div class="topnav" id="myTopnav">
      <a href="/home" >Dashboard</a>
      <a href="/manage-jobs">Manage Jobs</a>
      <a href="/users">Manage Users</a>
      <a href="/tyres" class="active">Tyres</a>
      <a href="/settings">Settings</a>
      <a href="javascript:void(0);" class="icon" onclick="myFunction()">
        <i class="fa fa-bars"></i>
      </a>
    </div>
    <div class="flex">
      <main class="flex-1">
        <div class="p-4"></div>
        <div class="flex justify-center">
          <h1 class="text-2xl font-bold mb-4">Tyre Stock System</h1>
        </div>
        <div class="shadow-md rounded-lg">
          <form id="searchBar" action="/tyres/search" method="POST">
            <input
              type="text"
              id="searchQuery"
              value="<%= search %>"
              name="partSearchQuery"
              placeholder="&#xf002 Part Number"
            />
            <input
              type="text"
              id="searchQuery"
              value="<%= search %>"
              name="searchQuery"
              placeholder="&#xf002 Tyre Size"
            />
            <br />
            <button
              type="submit"
              class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            >
              Search
            </button>
          </form>
          <div id="pagination">
            <div id="entriesDisplayDiv">
              Showing <span id="from"> </span> to <span id="to"></span> out of
              <span id="totalTableEntries"></span> entries
            </div>
            <div id="pageNumbersContainer">
              <div id="pageNumbers"></div>
              <div id="goToPage">
                Go to Page <input id="pageNumberInput" type="number" />
                <button
                  class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                  id="goToPageButton"
                >
                  Go
                </button>
              </div>
            </div>
          </div>

          <div class="table-responsive">
            <table id="myTable">
              <thead>
                <tr>
                  <th>Part Number</th>
                  <th>Description</th>
                  <th>Count</th>
                  <th>ST Code</th>
                </tr>
              </thead>
              <tbody>
                <% data.forEach(tyre => { %>
                <tr class="rowHover">
                  <td><%= tyre.partNumber %></td>
                  <td><%= tyre.description %></td>
                  <td><%= tyre.quantity %></td>
                  <td id="stCode"><%= tyre.stCode %></td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </main>
    </div>
  </body>
</html>
<script>
  /** @format */

  let currentPage = 1;
  let rowsPerPage = 10;
  let totalPages;
  const pageNumbers = document.getElementById("pageNumbers");

  function paginateTable() {
    let table = document.getElementById("myTable");
    let rows = Array.from(table.rows).slice(1);
    totalPages = Math.ceil(rows.length / rowsPerPage);

    rows.forEach((row) => (row.style.display = "none"));

    let start = (currentPage - 1) * rowsPerPage;
    let end = start + rowsPerPage;
    rows.slice(start, end).forEach((row) => (row.style.display = ""));
    pageNumbers.innerHTML = "";
    createPageLink("<<", 1);
    createPageLink("<", currentPage - 1);

    let startPageNumber =
      currentPage < 5
        ? 1
        : currentPage > totalPages - 2
        ? totalPages - 4
        : currentPage - 2;
    let endPageNumber =
      totalPages < 5
        ? totalPages
        : currentPage <= totalPages - 2
        ? startPageNumber + 4
        : totalPages;
    for (let i = startPageNumber; i <= endPageNumber; i++) {
      createPageLink(i, i);
    }
    createPageLink(">", currentPage + 1);
    createPageLink(">>", totalPages);

    setActivePageNumber();
    from.innerHTML = (currentPage - 1) * rowsPerPage + 1;
    to.innerHTML =
      currentPage === totalPages ? rows.length : currentPage * rowsPerPage;
    totalTableEntries.innerHTML = rows.length;
  }

  paginateTable();

  function changePage(e, pageNumber) {
    if (pageNumber == 0 || pageNumber == totalPages + 1) return;
    e.preventDefault();
    currentPage = pageNumber;
    pageNumberInput.value = "";
    paginateTable();
  }

  function setActivePageNumber() {
    document.querySelectorAll("#pageNumbers a").forEach((a) => {
      if (a.innerText == currentPage) {
        a.classList.add("active");
      }
    });
  }

  function createPageLink(linkText, pageNumber) {
    let pageLink = document.createElement("a");
    pageLink.href = "#";
    pageLink.innerHTML = linkText;
    pageLink.addEventListener("click", function (e) {
      changePage(e, pageNumber);
    });
    pageNumbers.appendChild(pageLink);
  }

  goToPageButton.addEventListener("click", (e) => {
    changePage(e, pageNumberInput.value);
  });
</script>
<script>
  function searchItem() {
    const inputElement = document.getElementById("discordID");
    const userInput = inputElement.value.trim();
    const currentUrl = window.location.href;
    const newUrl = `${currentUrl}/${userInput}`;
    // do something with the new URL, e.g. redirect to it
    window.location.href = newUrl;
  }
  function myFunction() {
    var x = document.getElementById("myTopnav");
    if (x.className === "topnav") {
      x.className += " responsive";
    } else {
      x.className = "topnav";
    }
  }
  if (window.innerHeight > window.innerWidth) {
    alert("Please rotate your device for a better view.")
} 
</script>

<style>
  @media screen and (max-width: 600px) {
    body .table {
      display: flex;
      flex-wrap: nowrap;
      justify-content: center;
    }

    .table .tr {
      display: flex;
      flex-direction: column;
    }

    .table .td {
      white-space: nowrap;
    }
  }
  #stCode {
    word-wrap: break-word;
  }
  table {
    font-family: Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    width: 100%;

    border: 1px solid #ddd;
  }

  tr,
  td,
  th {
    border-bottom: 1px solid #ddd;
    border-top: 1px solid #ddd;
    margin: 20px;
    padding-left: 10px;
    padding-right: 10px;
    max-width: 30rem;
  }

  tr:nth-child(even) {
    background-color: #262626;
  }

  tr:hover {
    background-color: #494d50;
  }

  tbody {
    word-wrap: normal;
    width: 90%;
  }

  th {
    padding-top: 12px;
    padding-bottom: 12px;
    text-align: left;
    background-color: #8d8d8d;
    color: rgb(0, 0, 0);
  }

  #discordID {
    border: solid 1px white;
    color: white;
    background-color: var(--background);
    width: 40%;
    padding: 12px 20px;
    margin: 8px 0;
    box-sizing: border-box;
  }
  
  .rowHover:hover {
    background-color: #494d50;
    color: rgb(0, 0, 0);
  }

  .underline {
    text-decoration: underline;
  }
  .pagination {
    text-align: center;
    margin-top: 20px;
  }

  .pagination button {
    padding: 5px 10px;
    margin: 0 5px;
    cursor: pointer;
    outline: 1px solid #494a4f;
    border-radius: 1px;
    border: none;
  }

  .hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .pagination button.active {
    background-color: #007bff;
    color: white;
  }

  #pagination {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    font-weight: bold;
    font-size: 14px;
  }
  #pagination a {
    color: rgb(255, 255, 255);
    float: left;
    padding: 9px 9px;
    margin: 3px;
    text-decoration: none;
    cursor: pointer;
  }
  #pagination a.active {
    border-radius: 50%;
    background-color: #4c4a4a;
    color: whitesmoke;
  }

  #pageNumbersContainer {
    display: flex;
    flex-wrap: wrap;
  }
  #pageNumbers {
    display: flex;
    padding: 2px;
  }

  input[type="number"] {
    width: 40px;
    height: 25px;
    border: 1px solid lightgray;
    text-align: center;
    margin: 5px;
    background-color: inherit;
    border-radius: 5px;
    outline: none;
  }
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  #goToPage {
    display: flex;
    align-items: center;
    margin-left: 10px;
    margin-right: 10px;
  }

  #entriesDisplayDiv {
    display: flex;
  }
  #entriesDisplayDiv span {
    margin-left: 5px;
    margin-right: 5px;
  }
</style>
