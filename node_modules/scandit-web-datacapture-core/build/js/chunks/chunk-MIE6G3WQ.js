import { a } from './chunk-SP3HSP4K.js';
import { a as a$1 } from './chunk-OAX54A7I.js';

var y=Promise.resolve(),p=!1,h=!1,d,b={writableDataPathPreload:"",writableDataPath:"",preloading:!1};async function T(){let t="FILE_DATA",o,s,e,r,a$2;function n(){clearTimeout(a$2),e.result.close(),r.result.close(),o(0);}function I(){try{let l=[],f=e.result.transaction(t,"readonly");f.addEventListener("error",n),f.addEventListener("abort",n);let m=f.objectStore(t).openCursor();m.onsuccess=()=>{let i=m.result;if(i==null)try{let c=0,u=r.result.transaction(t,"readwrite"),P=u.objectStore(t);u.addEventListener("error",n),u.addEventListener("abort",n),u.oncomplete=()=>{clearTimeout(a$2),e.result.close(),r.result.close(),o(c);};for(let D of l){let g=P.count(D.primaryKey);g.onsuccess=()=>{g.result===0&&(++c,P.add(D.value,D.primaryKey));},clearTimeout(a$2),a$2=globalThis.setTimeout(()=>{a.log(a.Level.Warn,"IndexedDB database is blocked! Resetting Scandit Data Capture library..."),s(new a$1({name:"BlockedIndexedDB",message:"IndexedDB database is blocked"}));},500);}}catch(c){n.call({error:c});}else {let{writableDataPathPreload:c,writableDataPath:u}=b;l.push({value:i.value,primaryKey:i.primaryKey.toString().replace(`${c}/`,`${u}/`)}),i.continue();}},m.onerror=n;}catch(l){n.call({error:l});}}return new Promise((l,f)=>{let{writableDataPathPreload:m,writableDataPath:i}=b;o=l,s=f,e=indexedDB.open(m),e.onupgradeneeded=()=>{try{e.result.createObjectStore(t);}catch(c){}},e.onsuccess=()=>{if(!Array.from(e.result.objectStoreNames).includes(t)){l(0);return}r=indexedDB.open(i),r.onupgradeneeded=()=>{try{r.result.createObjectStore(t);}catch(c){}},r.onsuccess=()=>{I();},r.onblocked=r.onerror=n;},e.onblocked=e.onerror=n;})}async function B(t,o){let{preloading:s}=b;if(d!=null){if(p=!0,!s&&t){let e=await T();if(!o&&e===0){p=!1;return}}await new Promise((e,r)=>{d==null||d(t,a=>{if(p=!1,a!=null){r(a);return}e();});});}}async function w(t,o=!1,s=!1){return (!h||s)&&(p?(h=!0,y=y.then(async()=>(h=!1,B(t,o)))):y=B(t,o)),y}async function O(t){b=t,d=FS.syncfs,FS.syncfs=(o,s)=>{let e=s,r=a=>{e(a);};w(o).then(r).catch(r);};try{FS.mkdir(b.writableDataPath);}catch(o){if(o.code!=="EEXIST")throw d=void 0,o}return FS.mount(IDBFS,{},b.writableDataPath),w(!0,!0)}

export { O as a };
