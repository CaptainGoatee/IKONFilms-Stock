import { d as d$1 } from './chunk-ZAOFG2OQ.js';
import { c as c$1, b, a as a$4 } from './chunk-Z7ZB32F5.js';
import { c } from './chunk-4I6GLCLG.js';
import { a as a$3 } from './chunk-MIE6G3WQ.js';
import { d } from './chunk-LPCS4E7V.js';
import { a as a$1 } from './chunk-P42Y2TFF.js';
import { a } from './chunk-SP3HSP4K.js';
import { a as a$2 } from './chunk-OAX54A7I.js';
import { c as c$2, e } from './chunk-ORB5AXD4.js';

async function O(h,e){async function t(){return importScripts(h)}try{await b(t,250,4e3,o=>{a.log(a.Level.Warn,o),a.log(a.Level.Warn,`Couldn't retrieve Scandit Data Capture library at ${h}, retrying...`);}),self.Module.mainScriptUrlOrBlob=h;let r=globalThis.SDC_WASM_JS_VERSION;return r!==e&&a.log(a.Level.Warn,`The Scandit Data Capture library JS file found at ${h} seems invalid: expected version doesn't match (received: ${r}, expected: ${e}). Please ensure the correct Scandit Data Capture file (with correct version) is retrieved.`),!0}catch(r){return a.log(a.Level.Error,r),!1}}var f=class f{constructor(e,t){this.MAX_NUMBER_OF_IMAGES_IN_FRAME_DATA_POOL=10;this.redrawInterval=1e3/30;this.redrawRequests=[];this._isDrawLoopRunning=!1;this.frameDataPool=new Map;this.lastFrameCounter=-1;this.poorMansBenchmarkLogs=!1;this.writableDataPathPreload="/scandit_sync_folder_preload";this.writableDataPathStandard="/scandit_sync_folder";this.resourceFilesSubfolder="resources";this.performanceMetricsReporterTimer=void 0;this.performanceMetrics={frameDataPoolSize:0,processedFramesCount:0,redrawRequestsCount:0,actualRedrawsCount:0};this.gestureListener=null;this.moduleHandler=e,this.workerFunctions=t,this._loadProgressCallback=this._loadProgressCallback.bind(this),c(this.getWasmMetadata());}get Module(){return this.moduleHandler.get()}set isDrawLoopRunning(e){this._isDrawLoopRunning=e,!e&&typeof this.loopTimeoutId=="number"&&(clearTimeout(this.loopTimeoutId),this.loopTimeoutId=void 0);}get isDrawLoopRunning(){return this._isDrawLoopRunning}setPoorMansBenchmarkLogs(e){this.poorMansBenchmarkLogs=e;}convertToLoadableFrameData(e){let t=this.getNextFrameId();this.frameDataPool.set(t,new Uint8ClampedArray(e.getFrameData()));let r=this.lastUsedModuleMirrorAxis==null?!1:this.lastUsedModuleMirrorAxis!==this.Module.Axis.None;return {frameId:t,width:e.getWidth(),height:e.getHeight(),isFrameSourceMirrored:r}}createContext(e){var l,d;let t=this.getModeDeserializers(),r=c$1(location);(r==="localhost"||r==="127.0.0.1")&&navigator.userAgent.includes("Electron")&&e.appName!=null&&(r+=`-${e.appName}`),this.parentDomain=e.parentDomain,this.contextDeserializer=new this.Module.DataCaptureContextDeserializer(this.writableDataPath,e.deviceId,e.context.deviceModelName,r,this.parentDomain,t,e.delayedRegistration,e.highEndBlurryRecognition,this.resourcePath);let o=this.contextDeserializer.contextFromJson(JSON.stringify(e.context));if(o==null)throw new Error("Could not create the context");let i=o.getView();this.context=o.getContext(),o.delete();let n=this.Module.DataCaptureContextListener.extend("DataCaptureContextListener",{didChangeStatus:(p,m)=>{this.contextDidChangeStatus(JSON.parse(m.toJson()));},didStartObservingContext:()=>{this.didStartObservingContext();}}),u=this.Module.GestureRecognizer.extend("GestureRecognizer",{setGestureListener:(p,m)=>{var g;(g=this.gestureListener)==null||g.delete(),this.gestureListener=p.clone();}});(l=this.gestureRecognizer)==null||l.delete(),this.gestureRecognizer=new u;let c=new n;this.context.addListener(c),c.delete(),this.setView(i),(d=this.view)==null||d.setGestureRecognizer(this.gestureRecognizer);}onTap(e){var t;(t=this.gestureListener)==null||t.onTap(JSON.stringify(e));}startReportingPerformanceMetrics(){this.performanceMetricsReporterTimer==null&&(this.performanceMetricsReporterTimer=setInterval(()=>{this.reportPerformanceMetrics();for(let e of Object.keys(this.performanceMetrics))this.performanceMetrics[e]=0;},1e3));}async reportPerformanceMetrics(){this.workerFunctions.postMessage({type:"performanceMetricsReport",payload:{...this.performanceMetrics}});}deleteFrameData(e){this.frameDataPool.delete(e);}dispose(){var e,t;this.context.dispose(),this.frameDataPool.clear(),this.isDrawLoopRunning=!1,this.lastFrameCounter=-1,(e=this.gestureRecognizer)==null||e.delete(),this.gestureRecognizer=null,(t=this.gestureListener)==null||t.delete(),this.gestureListener=null;}flushAnalytics(){this.context.flushAnalytics();}extractCentaurusLicense(e){return {payload:{centaurus:{licenseKey:this.Module.LicenseUtils[f.get3dPartyLicenseKeyMethodName](e)}}}}getModeDeserializers(){return new this.Module.VectorDataCaptureModeDeserializer}loadLibrary(e){return this.libraryLoadingPromise!=null?this.libraryLoadingPromise:(this.libraryLoadingPromise=this.setup(e),this.libraryLoadingPromise)}processFrame(e){var i;if(this.context==null)return {payload:e,transferables:[e.data.buffer]};let t=e.data,r=e.colorType==="GRAYSCALE"?this.Module.ImageBufferFormat.Grayscale8:this.Module.ImageBufferFormat.Rgba8888,o=this.Module.allocateUint8Array(t.byteLength);return this.Module.HEAPU8.set(t,o),(i=this.imageFrameSource)==null||i.outputFrame(o,e.width,e.height,r),{payload:e,transferables:[e.data.buffer]}}reportCameraProperties(e){this.context.setCameraProperties(e.deviceId,e.isFrontFacing,e.hasAutofocus);}requestFrameData(e){let t=this.frameDataPool.get(e);return t==null?{payload:{data:null}}:{payload:{data:t},transferables:[t.buffer]}}scheduleRedraw(e,t){this.addRedrawRequest(t),this.isDrawLoopRunning||this.startDrawLoop(e);}sendViewRefreshCommands(e){this.workerFunctions.postMessage({type:"draw",payload:e},[e.buffer]);}setFrameSource(e,t){var r;this.lastUsedModuleMirrorAxis=this.mapMirrorAxisOnModule(e),(r=this.imageFrameSource)==null||r.delete(),this.imageFrameSource=new this.Module.ImageBufferFrameSource(this.lastUsedModuleMirrorAxis,t),this.context.setFrameSource(this.imageFrameSource);}startDrawLoop(e){this.isDrawLoopRunning=!0;let t=i=>this.redrawRequests.length>0&&this.redrawRequests[0]<=i,r=i=>{for(;this.redrawRequests.length>0&&this.redrawRequests[0]<=i;)this.redrawRequests.shift();},o=()=>{this.loopTimeoutId=setTimeout(()=>{if(!this.isDrawLoopRunning)return;let i=performance.now();if(t(i)){r(i),e.draw();let n=e.getDrawCommands();this.sendViewRefreshCommands(new Uint8Array(n));}o();},this.redrawInterval);};o();}updateContext(e){if(this.context!=null&&this.contextDeserializer!=null){e.view!=null&&!e.view.visible&&this.context.flushAnalytics();let t=this.contextDeserializer.updateContextFromJson(this.context,this.view,JSON.stringify(e.context));if(t==null)throw new Error("Could not update the context");this.context.delete(),this.context=t.getContext();let r=t.getView();t.delete(),r!=null&&e.view!=null&&r.setViewSize(e.view.width,e.view.height),this.gestureRecognizer!=null&&(r==null||r.setGestureRecognizer(this.gestureRecognizer)),this.setView(r),a.log(a.Level.Debug,"context updated",e);}}onDocumentVisibilityChange(e){e==="hidden"&&this.context.flushAnalytics();}getNextFrameId(){return this.lastFrameCounter++,this.lastFrameCounter>=this.MAX_NUMBER_OF_IMAGES_IN_FRAME_DATA_POOL&&(this.lastFrameCounter=0),this.lastFrameCounter}getWasmDynamicLibraries(e){return this.getWasmSideModuleFileName()==null?[]:[`${e.replace(/\/[^/]*$/,"/")}${this.getWasmSideModuleFileName()}`]}getWasmCoreExpectedHash(e,t){return t?e?globalThis.SDC_WASM_CORE_MT_SIMD_HASH:globalThis.SDC_WASM_CORE_MT_HASH:e?globalThis.SDC_WASM_CORE_SIMD_HASH:""}getWasmCoreFileName(e,t){return t?e?globalThis.SDC_WASM_CORE_MT_SIMD_FILE_NAME:globalThis.SDC_WASM_CORE_MT_FILE_NAME:e?globalThis.SDC_WASM_CORE_SIMD_FILE_NAME:""}getWasmMetadata(){return globalThis.WASM_METADATA}getWasmSideModuleFileName(){return ""}_loadProgressCallback(e){this.workerFunctions.postMessage({type:"loadLibraryProgress",payload:e});}addRedrawRequest(e){this.redrawRequests.push(Math.round(performance.now())+e),this.redrawRequests.sort((t,r)=>t-r);}contextDidChangeStatus(e){e.code===260?e.message=e.message.replace("domain name",`domain name (${c$1(location)})`):e.code===265&&(e.message=e.message.replace("domain name",`domain name (${this.parentDomain})`)),this.workerFunctions.postMessage({type:"contextDidChangeStatus",payload:e});}didStartObservingContext(){this.workerFunctions.postMessage({type:"didStartObservingContext"});}mapMirrorAxisOnModule(e){switch(e){case"None":return this.Module.Axis.None;case"X":return this.Module.Axis.X;case"Y":return this.Module.Axis.Y;default:return this.Module.Axis.None}}setView(e){this.view=e,this.setViewRefreshHandler(e),e==null&&(this.isDrawLoopRunning=!1,this.sendViewRefreshCommands(new Uint8Array([])));}setViewRefreshHandler(e){if(e==null||e.isViewRefreshHandlerSet)return;let t=this.Module.NeedsRedrawDelegate.extend("NeedsRedrawDelegate",{setNeedsRedrawIn:this.scheduleRedraw.bind(this,e)}),r=new t;e.setNeedsRedrawDelegate(r),e.isViewRefreshHandlerSet=!0;}setupDataDecoding(){let e=this.moduleHandler.get(),t=e.DataDecoding.extend("DataDecoding",{decode(r,o){try{let i=JSON.parse(o),n=[];for(let u of i){let c=new TextDecoder(u.ianaName,{fatal:!0});n.push(c.decode(r.slice(u.startIndex,u.endIndex)));}return n.join("")}catch(i){return ""}}});e.setDataDecoding(new t);}start(e,t,r){e&&t&&(this.setupDataDecoding(),this.moduleHandler.get().callMain(),typeof this.moduleHandler.get().PThread=="object"||r());}getWritableDataPath(e,t){return e?this.writableDataPathPreload:t!=null?(a.log(a.Level.Debug,`IndexedDB database name override in use to recover from blocked standard database: ${t}`),t):this.writableDataPathStandard}async setup({libraryLocation:e$1,locationPath:t,preloadEngine:r,writableDataPathOverride:o,overrideThreadsSupport:i,overrideSimdSupport:n,verifyResponseHash:u,referredOrigin:c}){var R;let l=!1,d$2=!1;this.writableDataPath=this.getWritableDataPath(r,o),this.resourcePath=`${e$1}${this.resourceFilesSubfolder}/`,globalThis.path=t;let{resolve:p,reject:m,promise:g}=new d,b=a$1.sdkVersion();if(b==="")throw new a$2({name:"Invalid library version",message:"Library version is not defined or empty, cannot generate proper path to library files."});let[M,D]=await Promise.all([c$2(),e()]);i!=="auto"&&(D=i==="on"),n!=="auto"&&(M=n==="on");let k=d$1(b,e$1,this.getWasmCoreFileName(M,D)),{jsURI:C,wasmURI:y}=k,T={instantiateWasm:(s,N)=>(a$4({importObject:s,wasmURI:y,expectedHash:this.getWasmCoreExpectedHash(M,D),verifyResponseHash:u,successCallback:N,progressCallback:this._loadProgressCallback,referredOrigin:c}),{})};return this.moduleHandler.set({mainScriptUrlOrBlob:C,canvas:(R=this.workerFunctions.getOffscreenCanvas())!=null?R:{getContext:()=>null},...T,dynamicLibraries:this.getWasmDynamicLibraries(y),locateFile:s=>e$1+s,noInitialRun:!0,preRun:[async()=>{try{await a$3({writableDataPathPreload:this.writableDataPathPreload,writableDataPath:this.writableDataPath,preloading:r});}catch(s){if(s.name==="BlockedIndexedDB"){m(s.toString());return}a.log(a.Level.Debug,"No IndexedDB support, some data will not be persisted:",s);}d$2=!0,this.start(d$2,l,p);}],onMainComplete:()=>{if([l,d$2].includes(!1)){a.log(a.Level.Warn,{runtimeLoaded:l,fileSystemSynced:d$2},"Both runtimeLoaded and fileSystemSynced should be true when calling onMainComplete"),m("onMainComplete has been called but runtime or file system was not ready.");return}p();},onRuntimeInitialized:()=>{l=!0,this.start(d$2,l,p);},print:s=>{a.log(a.Level.Info,s),this.poorMansBenchmarkLogs&&this.workerFunctions.postMessage({type:"console",payload:s});}}),await O(C,b)||m(`Couldn't retrieve Scandit Data Capture library at ${C}, did you configure the path for it correctly?`),g}};f.get3dPartyLicenseKeyMethodName=atob("Z2V0QmxpbmtJZExpY2Vuc2VLZXk=");var W=f;

export { W as a };
