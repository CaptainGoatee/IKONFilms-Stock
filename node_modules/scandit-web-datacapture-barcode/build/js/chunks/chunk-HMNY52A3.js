import { a as a$1 } from './chunk-G57IY3DF.js';
import { a } from './chunk-RF6I7CKZ.js';
import { Quadrilateral } from 'scandit-web-datacapture-core';

var l=(a=>(a.EAN13UPCA="ean13Upca",a.UPCE="upce",a.EAN8="ean8",a.Code39="code39",a.Code93="code93",a.Code128="code128",a.Code11="code11",a.Code25="code25",a.Codabar="codabar",a.InterleavedTwoOfFive="interleavedTwoOfFive",a.MSIPlessey="msiPlessey",a.QR="qr",a.DataMatrix="dataMatrix",a.Aztec="aztec",a.MaxiCode="maxicode",a.DotCode="dotcode",a.KIX="kix",a.RM4SCC="rm4scc",a.GS1Databar="databar",a.GS1DatabarExpanded="databarExpanded",a.GS1DatabarLimited="databarLimited",a.PDF417="pdf417",a.MicroPDF417="microPdf417",a.MicroQR="microQr",a.Code32="code32",a.Lapa4SC="lapa4sc",a.IATATwoOfFive="iata2of5",a.MatrixTwoOfFive="matrix2of5",a.USPSIntelligentMail="uspsIntelligentMail",a))(l||{}),D=(i=>(i.A="A",i.B="B",i.C="C",i))(D||{}),g=(r=>(r.Mod10="mod10",r.Mod11="mod11",r.Mod16="mod16",r.Mod43="mod43",r.Mod47="mod47",r.Mod103="mod103",r.Mod10AndMod11="mod1110",r.Mod10AndMod10="mod1010",r))(g||{}),m=(n=>(n.None="none",n.Unknown="unknown",n.Linked="linked",n.GS1TypeA="gs1TypeA",n.GS1TypeB="gs1TypeB",n.GS1TypeC="gs1TypeC",n))(m||{}),p=class u{get isStructuredAppend(){return this._structuredAppendData!=null}get structuredAppendData(){return this._structuredAppendData}get addOnData(){return this._addOnData}get compositeData(){return this._compositeData}get compositeFlag(){return this._compositeFlag}get compositeRawData(){return this._compositeRawData}get data(){return this._data}get encodingRanges(){return this._encodingRanges}get frameID(){return this._frameID}get isColorInverted(){return this._isColorInverted}get isGS1DataCarrier(){return this._isGS1DataCarrier}get location(){return this._location}get rawData(){return this._rawData}get symbolCount(){return this._symbolCount}get symbology(){return this._symbology}static fromJSON(e){var i;let t=new u;return t._symbology=e.symbology,t._data=e.data,t._rawData=e.rawData,t._compositeData=e.compositeData,t._compositeRawData=e.compositeRawData,t._addOnData=(i=e.addOnData)!=null?i:null,t._isGS1DataCarrier=e.isGS1DataCarrier,t._compositeFlag=e.compositeFlag,t._isColorInverted=e.isColorInverted,t._symbolCount=e.symbolCount,t._frameID=e.frameId,t._encodingRanges=e.encodingRanges.map(c=>a.fromJSON(c)),t._location=Quadrilateral.fromJSON(e.location),t._structuredAppendData=a$1.fromJSON(e.structuredAppendData),t}};

export { l as a, D as b, g as c, m as d, p as e };
